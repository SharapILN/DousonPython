# Проигранной сражение
# Демонстрирует тот самый ненавистный нам бескончный цикл
print('Вашего героя окружила огромная армия троллей.')
print('Смрадными зелеными трупами врагов устланы все окрестные поля.')
print('Одинокий герой достает меч из ноден, готовясь к последнй битве в своей жизни.\n')
health = 10
trolls = 0
damage = 3
while health != 0:
    trolls += 1
    health -= damage
    print('Взмахнув мечом, ваш герой истребляет злобного тролля. ' \
          + 'Но сам получает повреждений на', damage, 'очков.\n')
print('Ваш герой доблестно сражался и убил',trolls,'троллей.')
print('Но увы! Он пал на поле боя.')
input('\n\nPress the enter key to exit.')

# При логической ошибке в коде, необходимо ее найти, для этого удобно применять трассировку исполнения программы.
# При трассировке вы симулируете работу программы, делая все, что должна делать она: выполняются все команды и
# контролируются значения всех переменных. Такое "пошаговое" выполнение ппрограммы помогает выяснить, что именно
# происходит в каждый момент ее работы, и установить, какими оплошностями в коде вызвана ошибка.

